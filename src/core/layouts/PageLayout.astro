---
import "../styles/global.css";
import { ClientRouter } from "astro:transitions";
import Header from "../sections/Header.astro";
import Footer from "../sections/Footer.astro";
import "../styles/core.css"
interface Props {
    title: string;
    path: string;
    lang: string;
}
const { title, lang, path }: Props = Astro.props;
---

<!doctype html>
<html lang={lang}>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
            rel="stylesheet"
        />
        <link href="https://fonts.googleapis.com/css2?family=Syne+Mono&display=swap" rel="stylesheet">
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
        <ClientRouter />
    </head>
    <body class="bg-neutral-100 dark:bg-slate-950 w-dvw h-dvh overflow-hidden font-poppins">
        <div
            id="container"
            class="flex flex-col items-center justify-center h-dvh overflow-y-auto scrollbar"
        >
            <Header lang={lang} path={path} />
            <main
                class="flex flex-col min-h-full pt-20 h-fit relative w-[95%] px-4"
            >
                <slot />
                <Footer lang={lang} />
            </main>
        </div>
    </body>
</html>
<script>
    const container = document.getElementById("container");
    document.addEventListener("astro:page-load", () => {
        if (!container) return;
        const height = localStorage.getItem("scrollHeight");
        if (!height) return;
        container.scrollTo({ behavior: "smooth", top: parseInt(height) });
    });
    if (container) {
        const header = document.getElementById("header");
        container.addEventListener("scroll", () => {
            const scroll = container.scrollTop;
            localStorage.setItem("scrollHeight", scroll.toString());
            if (!header) return;
            if (scroll > 10) {
                header.classList.remove("w-[95%]")
                const classesToAdd =
                    "w-[50%] px-8 rounded-full py-2 bg-neutral-200/60".split(" ");
                header.classList.add(...classesToAdd);
            } else {
                const classesToRemove =
                    "w-[50%] px-8 rounded-full py-2 bg-neutral-200/60".split(" ");
                header.classList.remove(...classesToRemove);
                header.classList.add("w-[95%]")
            }
        });
    }
</script>
